

Перем КаталогОтчетов;
Перем ТаблицаОтчетов;
Перем ИмяФайлаМД;

&Пластилин
&Табакерка
Перем ЗамечанияБСЛЛС;

&Желудь
Процедура ПриСозданииОбъекта(&Пластилин КаталогСборки, 
							&Пластилин ПодкаталогОтчетовБСЛЛС,
							&Пластилин ИмяФайлаМетаданныхОтчетаБСЛЛС)
	КаталогОтчетов = ОбъединитьПути(КаталогСборки, ПодкаталогОтчетовБСЛЛС);
	ИмяФайлаМД = ИмяФайлаМетаданныхОтчетаБСЛЛС;
	ИнициализироватьТаблицуОтветов();
КонецПроцедуры

Функция ТаблицаОтчетов() Экспорт
	ОбновитьТаблицуОтчетов();
	Возврат ТаблицаОтчетов;
КонецФункции

Функция Замечания(ИдентификаторОтчета) Экспорт

	Результат = Новый Структура("Замечания, Количество, ВремяТехДолга, Дата, Цель, КаталогИсходников", Новый Массив(), 0, 0);

	Если ТаблицаОтчетов.Количество() = 0 
		ИЛИ ЕстьЗаписьПоИдентификаторуИлиПодкаталогу(ИдентификаторОтчета) = Ложь Тогда
		ОбновитьТаблицуОтчетов();
	КонецЕсли;

	Строки = ТаблицаОтчетов.НайтиСтроки(Новый Структура("Идентификатор", ИдентификаторОтчета));

	Если Строки.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;

	Строка = Строки[0];

	Если Строка.Замечания = Неопределено Тогда
		Строка.Замечания = ЗамечанияБСЛЛС.Достать();
		Для Каждого Файл из Строка.Файлы Цикл
			Строка.Замечания.ДобавитьЗамеченияИзФайла(Файл.ПолноеИмя);
		КонецЦикла;
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(Результат, Строка);

	Результат.Замечания = Строка.Замечания.Получить(Результат.Дата);
	Результат.Количество = Строка.Замечания.КоличествоЗамечаний();
	Результат.ВремяТехДолга = Строка.Замечания.ВремяТехдолга();

	Возврат Результат;

КонецФункции

Процедура ОбновитьТаблицуОтчетов()
	ПодкаталогиОтчетов = НайтиФайлы(КаталогОтчетов, "*");

	Для Каждого ПодкаталогОтчета Из ПодкаталогиОтчетов Цикл
		Если Не ПодкаталогОтчета.ЭтоКаталог() 
			ИЛИ ЕстьЗаписьПоИдентификаторуИлиПодкаталогу(ПодкаталогОтчета.Имя) = Истина Тогда
			Продолжить;
		КонецЕсли;
		ПутьМетаданных = ОбъединитьПути(ПодкаталогОтчета.ПолноеИмя, ИмяФайлаМД);
		Метаданные = МетаданныеОтчетаИзФайла(ПутьМетаданных);

		Если Метаданные = Неопределено Тогда
			ВызватьИсключение "Не удалось прочитать метаданные отчета из файла " + ПутьМетаданных;
		КонецЕсли;

		НоваяСтрока = ТаблицаОтчетов.Добавить();
		НоваяСтрока.Каталог = ПодкаталогОтчета.ПолноеИмя;
		НоваяСтрока.Идентификатор = Метаданные["Идентификатор"];
		НоваяСтрока.Подкаталог = ПодкаталогОтчета["Имя"];
		НоваяСтрока.Дата = Метаданные["Дата"];
		НоваяСтрока.КаталогИсходников = Метаданные["КаталогИсходников"];
		НоваяСтрока.Цель = Метаданные["Цель"];
		НоваяСтрока.Файлы = НайтиФайлы(ПодкаталогОтчета.ПолноеИмя, "*.json");;

	КонецЦикла;

	ТаблицаОтчетов.Сортировать("Дата Убыв");
КонецПроцедуры

Функция МетаданныеОтчетаИзФайла(Путь)
	Если ФС.ФайлСуществует(Путь) Тогда
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.ОткрытьФайл(Путь);
		Метаданные = ПрочитатьJSON(ЧтениеJSON, Истина);
		ЧтениеJSON.Закрыть();
		Возврат Метаданные;
	КонецЕсли;
КонецФункции

Функция ЕстьЗаписьПоИдентификаторуИлиПодкаталогу(ИдДляПоиска)
	Возврат ТаблицаОтчетов.Найти(ИдДляПоиска) <> Неопределено; 
КонецФункции

Процедура ИнициализироватьТаблицуОтветов()
	ТаблицаОтчетов = Новый ТаблицаЗначений;
	ТаблицаОтчетов.Колонки.Добавить("Идентификатор");
	ТаблицаОтчетов.Колонки.Добавить("Каталог");
	ТаблицаОтчетов.Колонки.Добавить("Подкаталог");
	ТаблицаОтчетов.Колонки.Добавить("Дата");
	ТаблицаОтчетов.Колонки.Добавить("КаталогИсходников");
	ТаблицаОтчетов.Колонки.Добавить("Цель");
	ТаблицаОтчетов.Колонки.Добавить("Замечания");
	ТаблицаОтчетов.Колонки.Добавить("Файлы");

КонецПроцедуры