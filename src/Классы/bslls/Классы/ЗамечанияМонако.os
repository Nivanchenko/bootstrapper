&Пластилин
Перем РаботаСГит;

&Желудь
Процедура ПриСозданииОбъекта()
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстФайла(ИмяФайла, ФайлСКодом)
	Файл = Новый ТекстовыйДокумент();
	Файл.Прочитать(ИмяФайла, КодировкаТекста.UTF8);
	Текст = Файл.ПолучитьТекст();
	Если ФайлСКодом Тогда
		Текст = СтрЗаменить(Текст, "<", "&lt;");
		Текст = СтрЗаменить(Текст, ">", "&gt;");
	КонецЕсли;
	Возврат Текст;
КонецФункции

Функция СериализоватьЗначение(Значение)
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Значение);
	Возврат ЗаписьJSON.Закрыть();
КонецФункции

Функция ПолучитьСкриптИнициализацииМонако(СериализуемыеДанные, ИмяСкрипта)
	
	СкриптИнициализации = "";
		
	Путь = ОбъединитьПути(СтартовыйСценарий().Каталог, "Классы", "interface");
	Путь = ОбъединитьПути(Путь, "static", СтрШаблон("monaco/%1.js", ИмяСкрипта));
	Если Новый Файл(Путь).Существует() Тогда
		КодСкрипта = ПолучитьТекстФайла(Путь, Ложь);
		ШаблонСкрипта = "<script>checked_files = %1; %2</script>";
		Данные = СериализоватьЗначение(СериализуемыеДанные);
		СкриптИнициализации = СтрШаблон(ШаблонСкрипта, Данные, КодСкрипта);
	КонецЕсли;
		
	Возврат СкриптИнициализации;

КонецФункции

Функция ПолучитьКритичностьЗамечанияДляМонако(Замечание)

	Критичность = "";

	Если Замечание.Критичность = "INFO" Тогда
		Критичность = "info";
	ИначеЕсли Замечание.Критичность = "MAJOR" Тогда
		Критичность = "warning";
	ИначеЕсли Замечание.Критичность = "MINOR" Тогда
		Критичность = "hint";
	Иначе
		Критичность = "error";
	КонецЕсли;

	Возврат Критичность;

КонецФункции

Функция ПолучитьДанныеЗамечанияДляМонако(Замечание, ДатаПроверки)

	Критичность = ПолучитьКритичностьЗамечанияДляМонако(Замечание);
	Адрес = СтрШаблон("https://1c-syntax.github.io/bsl-language-server/diagnostics/%1", Замечание.Правило);
	Ссылка = СтрШаблон("<a href=""%1"" target=""_blank"">%2</a>", Адрес, Замечание.Правило);

	ДанныеЗамечания = Новый Структура();
	ДанныеЗамечания.Вставить("startLineNumber", Замечание.МестаИспользования[0].СтрокаНачало);
	ДанныеЗамечания.Вставить("endLineNumber", Замечание.МестаИспользования[0].СтрокаКонец);
	ДанныеЗамечания.Вставить("severity", Критичность);
	ДанныеЗамечания.Вставить("message", Замечание.Текст);
	ДанныеЗамечания.Вставить("author", Ссылка);
	ДанныеЗамечания.Вставить("date", Строка(ДатаПроверки) + " " + Замечание.Критичность);
	ДанныеЗамечания.Вставить("time", Замечание.ВремяИсправления);

	Возврат ДанныеЗамечания;

КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс
Функция ПолучитьЗамечанияДляМонако(Замечания, ДатаПроверки) Экспорт

	ЗамечанияПоФайлам = Новый Массив();
	Файлы = Новый Соответствие();

	Для Каждого КиЗ из Замечания Цикл
		Для Каждого Замечание Из КиЗ.Значение Цикл
			ИмяФайла = Замечание.МестаИспользования[0].Файл;
			ЗамечанияФайла = Файлы[ИмяФайла];
			Если ЗамечанияФайла = Неопределено Тогда
				ЗамечанияФайла = Новый Структура("name, code, issues, count, time", ИмяФайла, "", Новый Массив, 0, 0);
				ЗамечанияФайла.code = ПолучитьТекстФайла(ИмяФайла, Истина);
				Файлы[ИмяФайла] = ЗамечанияФайла;
				ЗамечанияПоФайлам.Добавить(ЗамечанияФайла);
			КонецЕсли;
			ДанныеЗамечания = ПолучитьДанныеЗамечанияДляМонако(Замечание, ДатаПроверки);
			ЗамечанияФайла.issues.Добавить(ДанныеЗамечания);
			ЗамечанияФайла.count = ЗамечанияФайла.Count + 1;
			ЗамечанияФайла.time = ЗамечанияФайла.Time + Замечание.ВремяИсправления;
		КонецЦикла;
	КонецЦикла;

	СкриптИнициализации = ПолучитьСкриптИнициализацииМонако(ЗамечанияПоФайлам, "issues");

	Результат = Новый Структура;
	Результат.Вставить("ЗамечанияПоФайлам", ЗамечанияПоФайлам);
	Результат.Вставить("СкриптИнициализации", СкриптИнициализации);	

	Возврат Результат;

КонецФункции

Функция ПолучитьСписокИзменений() Экспорт

	СписокИзмененныхФайлов = РаботаСГит.ПолучитьСписокИзмененныхФайлов();
	СкриптИнициализации = ПолучитьСкриптИнициализацииМонако(СписокИзмененныхФайлов, "diff");

	Результат = Новый Структура;
	Результат.Вставить("СписокИзменений", СписокИзмененныхФайлов);
	Результат.Вставить("СкриптИнициализации", СкриптИнициализации);

	Возврат Результат;

КонецФункции

#КонецОбласти