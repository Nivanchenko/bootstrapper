#Использовать fs

#Область ИнтеграцияВСписок

Перем Ссылка Экспорт;
Перем Представление Экспорт;

#КонецОбласти

Перем КаталогИсходников;
Перем КаталогОбработок;
Перем Обработки;
Перем ФабрикаКоманд;
Перем КаталогСборки;


#Область ПрограммныйИнтерфейс

Функция ПодкаталогОтчетов() Экспорт
	Возврат ОбъединитьПути(КаталогСборки, "vanessaadd_xunit");
КонецФункции

Функция ИмяФайлаМетаданных() Экспорт
	Возврат "report.json";
КонецФункции

#КонецОбласти

&Желудь
&Порядок(10)
&Прозвище("АдаптерТестов")
&Прозвище("junit")
Процедура ПриСозданииОбъекта(&Пластилин НастройкиПроекта, 
							&Пластилин МенеджерОбработок,
							&Табакерка &Пластилин КомандаВраннер)

	Ссылка = "/vanessaadd";
	Представление = "Vanessa ADD";
	Настройки = НастройкиПроекта.ПолучитьЗначение("ВанессаАДД");
	КаталогСборки = НастройкиПроекта.КаталогСборки();

	Если НЕ Настройки = Неопределено Тогда
		КаталогИсходников = Настройки["КаталогИсходников"];
		КаталогОбработок = Настройки["КаталогОбработок"];
	КонецЕсли;

	Обработки = МенеджерОбработок;
	Обработки.КаталогИсходников = КаталогИсходников;
	Обработки.КаталогБинарников = КаталогОбработок;

	ФабрикаКоманд = КомандаВраннер;

КонецПроцедуры

Функция ВыполнитьТесты() Экспорт
	Возврат КомандаЗапускаТестов(КаталогОбработок).Исполнить();
КонецФункции

Функция ВыполнитьТест(ИмяОбработки) Экспорт
	Тест = Обработки.СтрокаПоИмени(ИмяОбработки);

	Если Тест.ПутьБинарника = Неопределено Тогда
		ВызватьИсключение СтрШаблон("Для %1 нет бинарника", ИмяОбработки);
	КонецЕсли;

	Возврат КомандаЗапускаТестов(Тест.ПутьБинарника).Исполнить();

КонецФункции

Функция ТаблицаОбработок() Экспорт
	Возврат Обработки.ТаблицаОбработок();
КонецФункции

Функция СобратьВсе() Экспорт

	Возврат Обработки.СобратьВсе();

КонецФункции

Функция РазобратьВсе() Экспорт

	Возврат Обработки.РазобратьВсе();

КонецФункции

Функция Собрать(ИмяОбработки) Экспорт

	Возврат Обработки.Собрать(ИмяОбработки);

КонецФункции

Функция Разобрать(ИмяОбработки) Экспорт

	Возврат Обработки.Разобрать(ИмяОбработки);
	
КонецФункции

Функция КомандаЗапускаТестов(Каталог)

	МетаданныеОтчета = МетаданныеОтчета();

	КаталогОтчета =  МетаданныеОтчета.Каталог;

	ФС.ОбеспечитьКаталог(КаталогОтчета);

	ИмяФайлаМетаданных = ОбъединитьПути(КаталогОтчета, ИмяФайлаМетаданных());

	Возврат ФабрикаКоманд.Достать()
		.ДобавитьПараметр("xunit")
		.ДобавитьПараметр(Каталог)
		.ДобавитьПараметр("--xdddebug")
		.ДобавитьПараметр(СтрШаблон("--reportsxunit ""ГенераторОтчетаJUnitXML{%1/junit.xml}""", КаталогОтчета))
		.ДобавитьПараметр(СтрШаблон("--xddExitCodePath ""%1/ExitCode.txt""", КаталогОтчета))
		.ДобавитьПараметр("--testclient-additional ""/iTaxi""")
		.ДобавитьПередВыполнением(
			Новый Действие(ЭтотОбъект, "ЗаписатьДополнительныеДанные"), 
			Новый Структура("ИмяФайла, Данные", ИмяФайлаМетаданных, МетаданныеОтчета.Данные))
		.ВыключитьИБКМД();

КонецФункции

Процедура ЗаписатьДополнительныеДанные(Параметры) Экспорт
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.ОткрытьФайл(Параметры.ИмяФайла);
	ЗаписатьJSON(ЗаписьJSON, Параметры.Данные);
	ЗаписьJSON.Закрыть();
КонецПроцедуры

Функция ПараметрыХЮнит(КаталогОтчета) Экспорт
	Структура = Новый Структура;
	Структура.Вставить("Отладка", Ложь);
	Структура.Вставить("ВыводитьПодробноеПредставлениеОшибки", Истина);
	Структура.Вставить("ДобавлятьИмяПользователяВПредставлениеТеста", Ложь);
	Структура.Вставить("ДелатьЛогВыполненияСценариевВТекстовыйФайл", Истина);
	Структура.Вставить("ИмяФайлаЛогВыполненияСценариев", ОбъединитьПути(КаталогОтчета, "log.txt"));

	Возврат Структура;
КонецФункции

Функция КаталогТекущегоОтчета(Дата, Идентификатор)
	Возврат Формат(Дата, "ДФ=yyyy-MM-dd-HH-mm-ss") + "-" + Идентификатор;
КонецФункции

Функция МетаданныеОтчета()

	Структура = Новый Структура;
	Структура.Вставить("Тип", "VanessaADD xUnit");
	Структура.Вставить("Дата", ТекущаяДата());
	Структура.Вставить("Идентификатор", Строка(Новый УникальныйИдентификатор));

	Каталог = ОбъединитьПути(ПодкаталогОтчетов(),
							КаталогТекущегоОтчета(Структура.Дата, Структура.Идентификатор));

	Результат = Новый Структура("Данные, Каталог", Структура, Каталог);

	Возврат Результат;
	
КонецФункции
